{
    "swagger": "2.0",
    "info": {
        "description": "This is a simple REST API with Gin and Ent",
        "title": "Users API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/users/create-user": {
            "post": {
                "description": "Add a new user to the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/delete-user/{id}": {
            "delete": {
                "description": "Delete a user by UUID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/get-all-users": {
            "get": {
                "description": "Retrieve all users from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.UserResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "Detailed field-specific validation errors\nswagger:type object",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "email": "Email is required",
                        "first_name": "Invalid format"
                    }
                },
                "message": {
                    "description": "A descriptive message explaining the error",
                    "type": "string",
                    "example": "Validation failed"
                },
                "status": {
                    "description": "The HTTP status (as string)",
                    "type": "string",
                    "example": "400 Bad Request"
                },
                "timestamp": {
                    "description": "The time at which the error occurred",
                    "type": "string",
                    "example": "2025-04-20T01:23:45Z"
                }
            }
        },
        "github_com_AgazadeAV_my-first-go-project_internal_app_user_model.CreateUserInput": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "description": "Birthdate in format YYYY-MM-DD.",
                    "type": "string",
                    "example": "1995-05-03"
                },
                "email": {
                    "description": "Email address in valid format.",
                    "type": "string",
                    "example": "azer.agazade05@yandex.ru"
                },
                "first_name": {
                    "description": "First name of the user. Must be Latin, 1-50 characters.",
                    "type": "string",
                    "example": "Azer"
                },
                "last_name": {
                    "description": "Last name of the user. Must be Latin, 1-50 characters.",
                    "type": "string",
                    "example": "Agazade"
                },
                "phone_number": {
                    "description": "Phone number starting with +7 and 10 digits.",
                    "type": "string",
                    "example": "+79672417678"
                },
                "username": {
                    "description": "Unique username (Latin letters, numbers, dash or underscore).",
                    "type": "string",
                    "example": "azer_agazade"
                }
            }
        },
        "github_com_AgazadeAV_my-first-go-project_internal_app_user_model.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "A success message",
                    "type": "string",
                    "example": "Operation successful"
                }
            }
        },
        "github_com_AgazadeAV_my-first-go-project_internal_app_user_model.UserResponse": {
            "type": "object",
            "properties": {
                "birth_date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}