basePath: /
definitions:
  github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse:
    properties:
      errors:
        additionalProperties:
          type: string
        description: |-
          Detailed field-specific validation errors
          swagger:type object
        example:
          email: Email is required
          first_name: Invalid format
        type: object
      message:
        description: A descriptive message explaining the error
        example: Validation failed
        type: string
      status:
        description: The HTTP status
        example: 400 Bad Request
        type: string
      timestamp:
        description: The time at which the error occurred
        example: "2025-04-20T01:23:45Z"
        type: string
    type: object
  github_com_AgazadeAV_my-first-go-project_internal_app_user_model.CreateUserInput:
    properties:
      birth_date:
        description: Birthdate in format YYYY-MM-DD.
        example: "1995-05-03"
        type: string
      email:
        description: Email address in valid format.
        example: azer.agazade05@yandex.ru
        type: string
      first_name:
        description: First name of the user. Must be Latin, 1-50 characters.
        example: Azer
        type: string
      last_name:
        description: Last name of the user. Must be Latin, 1-50 characters.
        example: Agazade
        type: string
      phone_number:
        description: Phone number starting with +7 and 10 digits.
        example: "+79672417678"
        type: string
      username:
        description: Unique username (Latin letters, numbers, dash or underscore).
        example: azer_agazade
        type: string
    type: object
  github_com_AgazadeAV_my-first-go-project_internal_app_user_model.SuccessResponse:
    properties:
      message:
        description: A success message
        example: Operation successful
        type: string
    type: object
  github_com_AgazadeAV_my-first-go-project_internal_app_user_model.UserResponse:
    properties:
      birth_date:
        description: Birthdate in format YYYY-MM-DD.
        example: "1995-05-03"
        type: string
      email:
        description: Email address in valid format.
        example: azer.agazade05@yandex.ru
        type: string
      first_name:
        description: First name of the user. Must be Latin, 1-50 characters.
        example: Azer
        type: string
      id:
        description: ID of the user in UUID format.
        example: d290f1ee-6c54-4b01-90e6-d701748f0851
        type: string
      last_name:
        description: Last name of the user. Must be Latin, 1-50 characters.
        example: Agazade
        type: string
      phone_number:
        description: Phone number starting with +7 and 10 digits.
        example: "+79672417678"
        type: string
      username:
        description: Unique username (Latin letters, numbers, dash or underscore).
        example: azer_agazade
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple REST API with Gin and Ent
  title: Users API
  version: "1.0"
paths:
  /users/create-user:
    post:
      consumes:
      - application/json
      description: Add a new user to the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse'
      summary: Create new user
      tags:
      - users
  /users/delete-user/{id}:
    delete:
      description: Delete a user by UUID
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse'
      summary: Delete user
      tags:
      - users
  /users/get-all-users:
    get:
      description: Retrieve all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_model.UserResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_AgazadeAV_my-first-go-project_internal_app_user_errs.ErrorResponse'
      summary: Get all users
      tags:
      - users
swagger: "2.0"
