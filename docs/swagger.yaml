basePath: /
definitions:
  ent.User:
    properties:
      age:
        description: Age holds the value of the "age" field.
        type: integer
      id:
        description: ID of the ent.
        type: string
      name:
        description: Name holds the value of the "name" field.
        type: string
    type: object
  internal_user.CreateUserInput:
    properties:
      age:
        example: 30
        type: integer
      name:
        example: Azer
        type: string
    type: object
  internal_user.ErrorResponse:
    properties:
      message:
        example: Internal server error
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple REST API with Gin and Ent
  title: Users API
  version: "1.0"
paths:
  /users:
    get:
      description: Retrieve all users from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ent.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user.ErrorResponse'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Add a new user to the system
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/internal_user.CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_user.ErrorResponse'
      summary: Create new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete a user by UUID
      parameters:
      - description: User UUID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_user.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/internal_user.ErrorResponse'
      summary: Delete user
      tags:
      - users
swagger: "2.0"
